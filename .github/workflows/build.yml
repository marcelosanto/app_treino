name: Rust Dioxus Multi-Platform Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_desktop:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Instalar Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Instalar Dependências do Sistema (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libayatana-appindicator3-dev pkg-config

      - name: Cache das Dependências do Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/
            ~/.cargo/git/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Compilar Aplicação
        run: cargo build --release

      - name: Upload do Artefato Linux
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: target/release/app_treino # ✅ CORRIGIDO: Usando 'app_treino'

      - name: Upload do Artefato Windows
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: target/release/app_treino.exe # ✅ CORRIGIDO: Usando 'app_treino.exe'

  build_wasm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Instalar Rust Toolchain com Target WASM
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Instalar wasm-pack
        run: cargo install wasm-pack --force

      - name: Cache do Cargo e wasm-pack
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/
            ~/.cargo/git/
            target/
            pkg/
          key: ${{ runner.os }}-cargo-wasm-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-wasm-

      - name: Compilar WASM com wasm-pack
        run: wasm-pack build --target web --release

      - name: Upload do Artefato WASM
        uses: actions/upload-artifact@v4
        with:
          name: wasm-build
          path: pkg/
